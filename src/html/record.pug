extends ../layouts/app.pug

block append variables
  -
    function processAuthors(contacts) {
      var authors = [];

      contacts.forEach(function(contact) {
        if (contact["gmd:CI_ResponsibleParty"]["gmd:role"]["gmd:CI_RoleCode"]["codeListValue"] == "originator") {
          var author = {};

          if ("gmd:individualName" in contact["gmd:CI_ResponsibleParty"]) {
            if ("gmx:Anchor" in contact["gmd:CI_ResponsibleParty"]["gmd:individualName"]) {
              author.name = contact["gmd:CI_ResponsibleParty"]["gmd:individualName"]["gmx:Anchor"]["$t"];
            } else if ("gco:CharacterString" in contact["gmd:CI_ResponsibleParty"]["gmd:individualName"]) {
              author.name = contact["gmd:CI_ResponsibleParty"]["gmd:individualName"]["gco:CharacterString"];
            }
          }

          if ("gmd:organisationName" in contact["gmd:CI_ResponsibleParty"]) {
            author.organisation = contact["gmd:CI_ResponsibleParty"]["gmd:organisationName"]["gco:CharacterString"];
          }

          if ("gmd:contactInfo" in contact["gmd:CI_ResponsibleParty"]) {
            if ("gmd:CI_Contact" in contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]) {
              if ("gmd:address" in contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]["gmd:CI_Contact"]) {
                if ("gmd:CI_Address" in contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]["gmd:CI_Contact"]["gmd:address"]) {
                  if ("gmd:electronicMailAddress" in contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]["gmd:CI_Contact"]["gmd:address"]["gmd:CI_Address"]) {
                    if (contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]["gmd:CI_Contact"]["gmd:address"]["gmd:CI_Address"]["gmd:electronicMailAddress"]["gco:CharacterString"] != 'polardatacentre-intercept@bas.ac.uk') {
                      author.email = contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]["gmd:CI_Contact"]["gmd:address"]["gmd:CI_Address"]["gmd:electronicMailAddress"]["gco:CharacterString"];
                    }
                  } 
                }
              }

              if ("gmd:onlineResource" in contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]["gmd:CI_Contact"]) {
                if ("gmd:CI_OnlineResource" in contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]["gmd:CI_Contact"]["gmd:onlineResource"]) {
                  if ("gmd:linkage" in contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]["gmd:CI_Contact"]["gmd:onlineResource"]["gmd:CI_OnlineResource"]) {
                    if (contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]["gmd:CI_Contact"]["gmd:onlineResource"]["gmd:CI_OnlineResource"]["gmd:linkage"]["gmd:URL"].startsWith('https://orcid.org/')) {
                      author.orcid = contact["gmd:CI_ResponsibleParty"]["gmd:contactInfo"]["gmd:CI_Contact"]["gmd:onlineResource"]["gmd:CI_OnlineResource"]["gmd:linkage"]["gmd:URL"];
                    }
                  }
                }
              }
            }
          }

          authors.push(author);
        }
      });

      return authors;
    }
    function processDataLinks(links) {
      var dataLinks = [];

      links.forEach(function(link) {
        if ("gmd:MD_DigitalTransferOptions" in link) {
          if ("gmd:onLine" in link["gmd:MD_DigitalTransferOptions"]) {
            if ("gmd:CI_OnlineResource" in link["gmd:MD_DigitalTransferOptions"]["gmd:onLine"]) {
              if ("gmd:function" in link["gmd:MD_DigitalTransferOptions"]["gmd:onLine"]["gmd:CI_OnlineResource"]) {
                if (link["gmd:MD_DigitalTransferOptions"]["gmd:onLine"]["gmd:CI_OnlineResource"]["gmd:function"]["gmd:CI_OnLineFunctionCode"]["codeListValue"] == "download") {
                  var dataLink = {};

                  if ("gmd:name" in link["gmd:MD_DigitalTransferOptions"]["gmd:onLine"]["gmd:CI_OnlineResource"]) {
                    dataLink.title = link["gmd:MD_DigitalTransferOptions"]["gmd:onLine"]["gmd:CI_OnlineResource"]["gmd:name"]["gco:CharacterString"];
                  }

                  if ("gmd:description" in link["gmd:MD_DigitalTransferOptions"]["gmd:onLine"]["gmd:CI_OnlineResource"]) {
                    dataLink.description = link["gmd:MD_DigitalTransferOptions"]["gmd:onLine"]["gmd:CI_OnlineResource"]["gmd:description"]["gco:CharacterString"];
                  }

                  if ("gmd:linkage" in link["gmd:MD_DigitalTransferOptions"]["gmd:onLine"]["gmd:CI_OnlineResource"]) {
                    dataLink.href = link["gmd:MD_DigitalTransferOptions"]["gmd:onLine"]["gmd:CI_OnlineResource"]["gmd:linkage"]["gmd:URL"];
                  }

                  dataLinks.push(dataLink);
                }
              }
            }
          }
        }
      });

      return dataLinks;
    }

  - record = {};
  - record.title = metadata_record["gmd:MD_Metadata"]["gmd:identificationInfo"]["gmd:MD_DataIdentification"]["gmd:citation"]["gmd:CI_Citation"]["gmd:title"]["gco:CharacterString"];
  - record.abstract = metadata_record["gmd:MD_Metadata"]["gmd:identificationInfo"]["gmd:MD_DataIdentification"]["gmd:abstract"]["gco:CharacterString"]
  - record.citation = metadata_citation;
  - record.dataLinks = processDataLinks(metadata_record["gmd:MD_Metadata"]["gmd:distributionInfo"]["gmd:MD_Distribution"]["gmd:transferOptions"]);
  - record.authors = processAuthors(metadata_record["gmd:MD_Metadata"]["gmd:identificationInfo"]["gmd:MD_DataIdentification"]["gmd:pointOfContact"]);

block main_content
  mixin author(author)
    address
      h3.bsk-h4 #{ author.name }
      p 
        | #{ author.organisation }
      if author.email
        p(style='margin-bottom:5px;')
          abbr(title='Email address'): i.far.fa-fw.fa-envelope(aria-hidden='true')
          |
          |
          a(href='mailto:' + author.email) #{ author.email }
      if author.orcid
        p
          abbr(title='ORCID identifier'): i.ai.fa-fw.ai-orcid(aria-hidden='true' style='color:#A6CE39;')
          |
          |
          a(href=author.orcid) #{ author.orcid }

  mixin dataLink(link)
    tr
      td: a(href=link.href) #{ link.description }
      td.bsk-text-center #[i.fas.fa-fw.fa-arrow-alt-to-bottom(aria-hidden='true')] File Download
      td.bsk-text-center.bsk-text-success #[i.fas.fa-fw.fa-unlock(aria-hidden='true')] Open Access

  header
    h1.bsk-page-header #{ record.title }
    p.bsk-lead #{ record.abstract }

  section(style='margin:60px 0;')
    h2 Citation
    blockquote #{ record.citation }
    p You must cite this dataset using this citation. If you need an alternative format you can use the #[a(href='https://citation.crosscite.org') CrossCite Citation Formatter].

  section(style='margin:60px 0;')
    h2 Data links
    table.bsk-table
      thead
        tr
          th Name
          th.bsk-text-center Method
          th.bsk-text-center Access
      tbody
        each link in record.dataLinks
          +dataLink(link)

  section(style='margin-top:60px;')
    h2 Authors
    each authorRow, i in record.authors
      if i % 3 == 0
        div.bsk-row
          each author in record.authors.slice(i, i+3)
            div.bsk-col-12-md-4
              +author(author)

  //- section
  //-   h2 Contacts

//- TODO
//- ====
//-
//- To include from ODI certificates (references are for discussion in 'iso-pdc-resolved-example.xml'):
//-
//- 27.1.26.1.3. release date
//- 27.1.26.1.4. modification date
//- 27.1.26.1.5. frequency of releases
//- 27.1.26.1.6. identifier
//- 27.1.26.1.7. landing page
//- 27.1.26.1.8. language
//- 27.1.26.1.9. publisher
//- 27.1.26.1.10. spatial/geographical coverage
//- 27.1.26.1.11. temporal coverage
//- 27.1.26.1.12. theme(s)
//- 27.1.26.1.13. keyword(s) or tag(s)
//- 27.1.26.1.14. distribution(s)

//- Notes
//- =====
//-
//- 1. this citation shown is not taken from the record data, instead it is fetched from the CrossCite API
//- 1.1.  this could lead to a difference between the human and machine readable citation for a given DOI (i.e. format)
//- 1.2. a workaround would be to look for the relevant otherConstraint element and strip off the 'cite as: ' prefix